services:
  postgres:
    container_name: ed-mart
    image: postgres
    environment:
      POSTGRES_USER: edmart
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
    ports:
      - "5433:5432"
    networks:
      - postgres
    restart: 'unless-stopped'

  pgadmin:
    container_name: pgadmin-edmart
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "5051:80"
    networks:
      - postgres
    restart: 'unless-stopped'


  mysql-db:
    image: mysql:5.7
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: product-server
      MYSQL_USER: edmart
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
    ports:
      - '3307:3306'
    networks:
      - mysql
    volumes:
      - my-db:/var/lib/mysql

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql-db
      PMA_PORT: 3307
      PMA_ARBITRARY: 1
      MYSQL_USERNAME: edmart
      MYSQL_ROOT_PASSWORD: password
    ports:
      - '8078:80'
    networks:
      - mysql
    depends_on:
      - mysql-db

  redis-stack-server:
    image: redis/redis-stack:latest
    volumes:
      - redis-data:/datax
    ports:
      - 6380:6379
      - 8055:8001
    networks:
      - redis-network
    restart: always

#  sonarqube:
#    container_name: sonarqube-inventics
#    image: sonarqube
#    ports:
#      - "9000:9000"
#    networks:
#      - postgres
#    restart: 'unless-stopped'

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin-ed-mart
    ports:
      - "9412:9411"
    networks:
      - spring

  zookeeperr:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeperr
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22182:2181"
    networks:
      - kafka-network
  broker1:
    image: confluentinc/cp-kafka:latest
    container_name: broker1
    depends_on:
      - zookeeperr
    ports:
      - "9002:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://broker1:9093,OUTSIDE://localhost:9002
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENER_NAME_OUTSIDE: OUTSIDE
      KAFKA_LISTENER_NAME_INSIDE: INSIDE
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeperr:2181
      KAFKA_BROKER_ID: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CLUSTER_NAME: "ed-mart"
    networks:
      - kafka-network

  kowll:
    image: rsmnarts/kowl:latest
    container_name: kowll
    ports:
      - "8070:8080"
    environment:
      KAFKA_BROKERS: "broker1:9093"
    networks:
      - kafka-network

networks:
  postgres:
    driver: bridge
  mysql:
    driver: bridge
#  sonarqube:
#    driver: bridge
  redis-network:
    driver: bridge
  spring:
    driver: bridge
  kafka-network:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  my-db:
  redis-data:
    external: false